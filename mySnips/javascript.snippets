# JavaScript ES6 snippets

# arrow function
snippet => "Arrow function" i
(${1}) => {
	${2}
}
endsnippet

# class
snippet class "es6 class"
class ${1:name} {
	constructor(${2:arg}){
		${3: //init}
	}
	${4}
}
endsnippet

# forof
snippet forof "for of ..."
for(let ${1:s} of ${2:sequence}){
	${3}
}
endsnippet

# import
snippet im "import module"
import ${1:foo} from '${2:bar}';
endsnippet

# export
snippet ex "export"
export ${1:default} ${2:bar}
endsnippet
#---------------------------------------


# my for loop
snippet for "for loop"
for ( let ${1:i} = ${2:0}; $1 < ${3:length}; $1++ ) {
	$0
}
endsnippet

# log
snippet log "javascript common log"
console.log(${1:logText});
endsnippet

# table log
snippet logt "javascript table log"
console.table(${1:logText});
endsnippet

# debugger
snippet db "javascript debugger"
debugger;
endsnippet

# class function bind
snippet cb "class function bind"
this.${1:function_name} = this.$1.bind(this);$0
endsnippet

# angular log
snippet alog "angular $log"
$log.info(${1:logText});
endsnippet

# angular custom component
snippet ngc "angular component" b
(function () {
  'use strict';

  angular
    .module('${3:moduleName}')
    .component('${1:componentName}', {
      templateUrl: '${2:templateUrl}',
      controller: $1Controller,
      controllerAs: 'vm',
    });

    /**@ngInject */
    function $1Controller() {
      var vm = this;

	  $0
    }
})();
endsnippet

# react class
snippet rcl "common react class module"
import React, { Component } from "react";
import PropTypes from "prop-types";

class ${1:classname} extends Component {
  constructor(props) {
    super(props);
  }

  render() {
	return (
		<div>
			$0
		</div>
	);
  }
}

export default $1;

$1.PropTypes = {
//ptionalArray: PropTypes.array,
//ptionalBool: PropTypes.bool,
//ptionalFunc: PropTypes.func,
//ptionalNumber: PropTypes.number,
//ptionalObject: PropTypes.object,
//ptionalString: PropTypes.string,
//ptionalSymbol: PropTypes.symbol,
}
endsnippet


