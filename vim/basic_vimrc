"" ------------------------------- General Settings  ----------------------------------------


" allow backspacing over everything in insert mode
set backspace=indent,eol,start

set ruler       " show the cursor position all the time
set number      " show line number
set showcmd     " display incomplete commands
set history=500 " keep 500 lines of command line history
set linebreak   " wrap line on 'word' boundaries
set splitright  " Vertical splits use right half of screen
set tildeop     " use ~ to toggle case as an operator, not a motion

set expandtab	 	" 将制表符扩展为空格
set tabstop=4		" 设置编辑时制表符占用空格数
set shiftwidth=4	" 设置格式化时制表符占用空格数
set softtabstop=4	" 让 vim 把连续数量的空格视为一个制表符
set shortmess=atI   " 启动的时候不显示那个援助乌干达儿童的提示 
set autoindent
autocmd Filetype javascript setlocal ts=2 sts=2 sw=2

set spell
set spelllang=en_us,cjk

set lines=40 columns=120
map <F11> :call MyFullScreenToggle()<CR>
let fullScreen = 0
function! MyFullScreenToggle()
    if !g:fullScreen
        set lines=999 columns=999
        let g:fullScreen = 1
    else
        set lines=40 columns=120
        let g:fullScreen = 0
    endif
endfunction

"常用快捷键映射
map <C-s> :w<cr>
vmap <C-c>  y
vmap <C-x> x
map <silent> <C-a> <esc>ggVG<CR>
map <silent> <A-l> :ls<CR>
nmap <silent> gb :bnext<CR>
nmap <silent> gB :bprevious<CR>
nmap <Leader>b 0
nmap <Leader>e $
noremap <silent> Y y$
vnoremap <Leader>y "+y
nmap <Leader>p "+p
nmap <Leader>q :q<CR>
nmap <Leader>w :w<CR>
nmap <Leader>M %
" 窗口间移动
nmap <silent> <C-h> <C-w>h
nmap <silent> <C-j> <C-w>j
nmap <silent> <C-k> <C-w>k
nmap <silent> <C-l> <C-w>l

"搜索设置
set incsearch   " do incremental searching
set hlsearch
set ignorecase
nmap <silent> <Leader>c :nohl<CR>
command! C nohlsearch   " use :C to clear hlsearch

cabbrev help tab help

if has('mouse')
    set mouse=a     " enable mouse if the mouse work fine in the terminal
endif

" 让配置变更立即生效
" autocmd BufWritePost $MYVIMRC source $MYVIMRC

set encoding=utf-8  " The encoding displayed.
set fileencoding=utf-8  " The encoding written to file.


"为.txt文件设置特定的字体
"autocmd BufEnter *.txt set guifont=Arial\ 12

"设置字体
if has("gui_running")
  if has("gui_gtk2")
    set guifont=Inconsolata\ 14
  elseif has("gui_macvim")
    set guifont=Menlo\ Regular:h14
  elseif has("gui_win32")
    set guifont=DejaVu\ Sans\ Mono\ for\ Powerline:h12
  endif
endif

"界面设置
"--------------------
" 禁止显示菜单和工具条
set guioptions-=m
set guioptions-=T
" 禁止光标闪烁
set gcr=a:block-blinkon0
" 禁止显示滚动条
set guioptions-=l
set guioptions-=L
set guioptions-=r
set guioptions-=R

"ctrl+f12切换菜单显示
"----------------------------------------------
map <silent> <C-F2> :if &guioptions =~# 'T' <Bar>
 	\set guioptions-=T <Bar>
 	\set guioptions-=m <bar>
 	\else <Bar>
 	\set guioptions+=T <Bar>
 	\set guioptions+=m <Bar>
 	\endif<CR>



" 辅助信息
"----------------------
" 总是显示状态栏
set laststatus=2
let g:Powerline_colorscheme='solarized256'
" 显示光标当前位置
set ruler
" 开启行号显示
set number
" 高亮显示当前行/列
set cursorline
set cursorcolumn
" 高亮显示搜索结果
set hlsearch


"自动调节quickfix高度
 au FileType qf call AdjustWindowHeight(3, 15)
function! AdjustWindowHeight(minheight, maxheight)
    let l = 1
    let n_lines = 0
    let w_width = winwidth(0)
    while l <= line('$')
        " number to float for division
        let l_len = strlen(getline(l)) + 0.0
        let line_width = l_len/w_width
        let n_lines += float2nr(ceil(line_width))
        let l += 1
    endw
    exe max([min([n_lines, a:maxheight]), a:minheight]) . "wincmd _"
endfunction
